AC_INIT(libecwj2-examples,3.3)
# Load system type in $target
AC_CANONICAL_TARGET
AM_INIT_AUTOMAKE

# Check for programs
AC_PROG_CC
AC_PROG_CC_STDC
AC_PROG_CPP
AC_PROG_CXX
AM_PROG_LD
AC_PROG_LIBTOOL
AC_SUBST(LD)
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_LN_S

# Check for header files
AC_STDC_HEADERS

# Configure libtool
AC_ENABLE_SHARED
AC_ENABLE_STATIC

# Handle inline keyword
AC_C_INLINE
AC_SUBST(inline)

# Platform-specific preprocessor defs, compilation flags and linker flags
case "$target" in
	*linux*)
		PLATFORM_DEFS="-DLINUX -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
		;;
        *solaris*)
		PLATFORM_DEFS="-DSOLARIS -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE=1"
		PLATFORM_CFLAGS="-mno-app-regs"
		PLATFORM_LDFLAGS="-lrt -lnsl -lsocket"
		;;
        *darwin*)
		PLATFORM_DEFS="$EXAMPLE_DEFS -DMACOSX -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
		PLATFORM_LDFLAGS="-L/usr/lib -L/usr/local/lib -framework Carbon"
		;;
        *)
		;;
esac		

# Combine them with generic flags
EXAMPLE_DEFS="$PLATFORM_DEFS -D_GNU_SOURCE -D_REENTRANT -DUNICODE -D_UNICODE -DPOSIX"
EXAMPLE_LDFLAGS="$PLATFORM_LDFLAGS -lecwj2 -ldl -lpthread -lstdc++"
EXAMPLE_CFLAGS="$PLATFORM_CFLAGS"

# Include directory
MAIN_INCLUDE_DIR="$PWD/../Source/include"
EXAMPLE_INCLUDES="$EXAMPLE_INCLUDES -I$MAIN_INCLUDE_DIR"

# Build Makefile.am substitution map
AC_SUBST([EXAMPLE_INCLUDES])
AC_SUBST([EXAMPLE_DEFS])
AC_SUBST([EXAMPLE_CFLAGS])
AC_SUBST([EXAMPLE_LDFLAGS])

AC_OUTPUT([Makefile decompression/Makefile compression/Makefile decompression/example1/Makefile \
	   decompression/example2/Makefile decompression/example4/Makefile compression/example1/Makefile \
	   compression/example2/Makefile compression/example3/Makefile compression/example5/Makefile])
