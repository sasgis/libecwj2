/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_ermapper_ecw_JNCSEcwConfig */

#ifndef _Included_com_ermapper_ecw_JNCSEcwConfig
#define _Included_com_ermapper_ecw_JNCSEcwConfig
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setTextureDither
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setTextureDither
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getTextureDither
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getTextureDither
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setForceFileReopen
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setForceFileReopen
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getForceFileReopen
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getForceFileReopen
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setCacheMaxMem
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setCacheMaxMem
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getCacheMaxMen
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getCacheMaxMen
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setCacheMaxOpenFiles
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setCacheMaxOpenFiles
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getCacheMaxOpenFiles
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getCacheMaxOpenFiles
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setBlockingTimeMS
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setBlockingTimeMS
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getBlockingTimeMS
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getBlockingTimeMS
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setRefreshTimeMS
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setRefreshTimeMS
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getRefreshTimeMS
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getRefreshTimeMS
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setPurgeDelayMS
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setPurgeDelayMS
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getPurgeDelayMS
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getPurgeDelayMS
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setFilePurgeDelayMS
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setFilePurgeDelayMS
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getFilePurgeDelayMS
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getFilePurgeDelayMS
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setMinPurgeDelayMS
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setMinPurgeDelayMS
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getMinPurgeDelayMS
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getMinPurgeDelayMS
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setECWPProxy
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setECWPProxy
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getECWPProxy
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getECWPProxy
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setECWPReconnect
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setECWPReconnect
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getECWPReconnect
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getECWPReconnect
  (JNIEnv *, jclass);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    setForceLowMemCompress
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_setForceLowMemCompress
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_ermapper_ecw_JNCSEcwConfig
 * Method:    getForceLowMemCompress
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_ermapper_ecw_JNCSEcwConfig_getForceLowMemCompress
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
