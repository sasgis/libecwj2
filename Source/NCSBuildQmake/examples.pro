# 	QT qmake file for the libecwj2 sample code
#	Author: 	Tom Lynch
#	Last update:	Tom Lynch, 2005-05-23
#
#	This qmake file can be used to create build files (makefiles/project 
#	files/xcode files etc) to compile this library on different platforms.
#
#	Build files from this qmake file have been created for common platforms
#	so you should only need to modify this file if you decide to add support
#	for a new platform, or discover a problem with the build configuration
#	for one of the platforms with existing support.
#
#	The build files generated by this file are used to build the sample code 
#	that ships with the source distribution.  Output executables are created
#	in the /bin subdirectory of the distro.
#
#	There are several examples of use of the libecwj2/ECW JPEG 2000 SDK for 
#	decompression of ECW and JPEG 2000 files, and also of use of the library 
#	to compress/recompress data to the two supported formats.

TEMPLATE = app 

# Recognised configuration options when creating project files
# 	dexample[1-4]	Decompression examples 1-4
#	cexample[1-5]	Compression examples 1-5
#	NCSEcw		Link with NCSEcw, NCSUtil and NCScnet libraries
#	libecwj2	Link with unified libecwj2 library (default)
#	staticlink	Link statically (default)
#	sharedlink	Link to DLL/shared object version of libecwj2 or NCS*

# Default configuration
CONFIG -= qt
CONFIG *= warn_on thread 

# message("CONFIG: " $${CONFIG})

# exceptions (removed from default config)

# Establish compilation options for the various platforms
# common options for any Linux platform
linux-* {	
	DEFINES	*= UNICODE _GNU_SOURCE LINUX POSIX _LARGEFILE_SOURCE _LARGEFILE64_SOURCE _FILE_OFFSET_BITS=64
	sharedlink:LIBS *= -lm -lc -ldl -lrt
}
# common options for any windows platform
win32-* {
	DEFINES	*= UNICODE _UNICODE
	QMAKE_CFLAGS_RELEASE = -O2
	QMAKE_CXXFLAGS_RELEASE = -O2
}
# common options for the g++ compiler
*-g++ {		
	CFLAGS	*= -Wall -Wno-long-long -fpic -fno-common
	CXXFLAGS *= -Wall -Wno-long-long -fpic -fno-common
}
# solaris/g++ options
solaris-g++ {
	DEFINES	*= UNICODE _GNU_SOURCE SOLARIS POSIX _REENTRANT _FILE_OFFSET_BITS=64 _LARGEFILE64_SOURCE=1
	CFLAGS	*= -mno-app-regs 
	CXXFLAGS *= -mno-app-regs
	sharedlink:LIBS *= -lm -lc -ldl -lrt
	LIBS *= -lnsl -lsocket	
}
# hpux/acc options - not yet properly tested
hpux-acc {		
	DEFINES *= HPUX+Z POSIX _LARGEFILE64_SOURCE _FILE_OFFSET_BITS=64 _PSTAT64
	DEFINES *= RWSTD_MULTI_THREAD RW_MULTI_THREAD 
	CFLAGS *= -Wall +O3 +DA2.0W +DD64 -Ae
	CXXFLAGS *= -Wall +O3 +DA2.0W +DD64 -AA +W 829,921,430 
}
# macosx options
macx-g++ {	
	DEFINES	*= MACOSX POSIX UNICODE _GNU_SOURCE _LARGEFILE_SOURCE _LARGEFILE64_SOURCE _FILE_OFFSET_BITS=64
	LFLAGS *= -dynamiclib -L/usr/lib -L/usr/local/lib
}

# Establish the location of the source and include directories, 
# the include search path, and other directories
SDIR = ../../../Source
IDIR = ../../../Source/include
EXAMPLESDIR = ../../../examples
CEXAMPLESDIR = $${EXAMPLESDIR}/compression
DEXAMPLESDIR = $${EXAMPLESDIR}/decompression
BINDIR = ../../../bin
LIBDIR = ../../../lib
INCLUDEPATH = $${IDIR}
DESTDIR = $${BINDIR}
OBJECTS_DIR = ../../../obj/
DEBUG_SUFFIX = d
STATIC_SUFFIX = S
LIBECWJ2_NAME = ecwj2

staticlink {
	LIBECWJ2_NAME = $${LIBECWJ2_NAME}$${STATIC_SUFFIX}
	OBJECTS_SUFFIX = static
}
sharedlink:OBJECTS_SUFFIX = shared
OBJECTS_DIR = $${OBJECTS_DIR}$${OBJECTS_SUFFIX}

debug:LIBECWJ2_NAME = $${LIBECWJ2_NAME}$${DEBUG_SUFFIX}
	
win32 {
	DOT_LIB = .lib
	LIBECWJ2_NAME = $${LIBECWJ2_NAME}$${DOT_LIB}
	LIBECWJ2_LIB = ../../../lib/lib
	LIBECWJ2_LIB = $${LIBECWJ2_LIB}$${LIBECWJ2_NAME}
}
!win32 {
	DASH_L = -l
	LIBECWJ2_LIB = $${DASH_L}$${LIBECWJ2_NAME}
}

win32 {
	libecwj2:LIBS *= $${LIBECWJ2_LIB}
	staticlink:LIBS *= Crypt32.lib shlwapi.lib ws2_32.lib wininet.lib version.lib imagehlp.lib
	NCSEcw:sharedlink:LIBS *= ../../../lib/NCSEcw.lib ../../../lib/NCSUtil.lib ../../../lib/NCScnet.lib
	NCSEcw:staticlink:LIBS *= ../../../lib/NCSEcwS.lib ../../../lib/NCSUtilS.lib ../../../lib/NCScnetS.lib
}

!win32 {
	libecwj2:LIBS *= -L../../../lib $${LIBECWJ2_LIB}
#	NCSEcw:staticlink:LIBS *= -L../../../lib -lNCSEcwS -lNCSUtilS -lNCSCnetS -lNCSEcwCS
#	NCSEcw:sharedlink:LIBS *= -L../../../lib -lNCSEcw -lNCSUtil -lNCSCnet -lNCSEcwC 
}

dexample1 {
	SOURCES = $${DEXAMPLESDIR}/example1/dexample1.c
	TARGET = DExample1
}

dexample2 {
	SOURCES = $${DEXAMPLESDIR}/example2/dexample2.c
	TARGET = DExample2
}

dexample4 {
	SOURCES = $${DEXAMPLESDIR}/example4/dexample4.c
	TARGET = DExample4
}

cexample1 {
	SOURCES = $${CEXAMPLESDIR}/example1/cexample1.c
	TARGET = CExample1
}

cexample2 {
	SOURCES = $${CEXAMPLESDIR}/example2/cexample2.c
	TARGET = CExample2
}

cexample3 {
	SOURCES = $${CEXAMPLESDIR}/example3/cexample3.cpp
	TARGET = CExample3
}

win32:cexample4 {
	LIBS *= gdiplus.lib
	SOURCES = $${CEXAMPLESDIR}/example4/cexample4.cpp
	TARGET = CExample4
}
!win32:cexample4 {
	message("Compression example 4 uses GDI+ and is only supported on win32")
}

cexample5 {
	SOURCES = $${CEXAMPLESDIR}/example5/cexample5.cpp
	TARGET = CExample5
}

staticlink:TARGET = $${TARGET}$${STATIC_SUFFIX}
debug:TARGET = $${TARGET}$${DEBUG_SUFFIX}



